{"ast":null,"code":"'use strict';\n/**\n * Helper to convert an object's keys\n */\n\nmodule.exports = function convertKeys(obj, converter, ignored) {\n  //Validate\n  if (typeof obj !== 'object' || obj === null) {\n    throw new Error('Non object passed to convertKeys: ' + obj);\n  } //Ignore arrays\n\n\n  if (Array.isArray(obj)) {\n    return obj;\n  } //Ensure array for ignored values\n\n\n  if (!Array.isArray(ignored)) {\n    ignored = [];\n  } //Process all properties\n\n\n  for (const key in obj) {\n    //istanbul ignore else\n    if (obj.hasOwnProperty(key)) {\n      //Convert key to snake case\n      const converted = converter(key); //Recursive for child objects, unless ignored\n      //The ignored check checks both variants of the key\n\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        if (!ignored.includes(key) && !ignored.includes(converted)) {\n          obj[key] = convertKeys(obj[key], converter, ignored);\n        }\n      } //Convert key to snake case and set if needed\n\n\n      if (converted !== key) {\n        obj[converted] = obj[key];\n        delete obj[key];\n      }\n    }\n  } //Return object\n\n\n  return obj;\n};","map":{"version":3,"names":["module","exports","convertKeys","obj","converter","ignored","Error","Array","isArray","key","hasOwnProperty","converted","includes"],"sources":["D:/grad project/examico project/Ecamico/node_modules/@sendgrid/helpers/helpers/convert-keys.js"],"sourcesContent":["'use strict';\n\n/**\n * Helper to convert an object's keys\n */\nmodule.exports = function convertKeys(obj, converter, ignored) {\n\n  //Validate\n  if (typeof obj !== 'object' || obj === null) {\n    throw new Error('Non object passed to convertKeys: ' + obj);\n  }\n\n  //Ignore arrays\n  if (Array.isArray(obj)) {\n    return obj;\n  }\n\n  //Ensure array for ignored values\n  if (!Array.isArray(ignored)) {\n    ignored = [];\n  }\n\n  //Process all properties\n  for (const key in obj) {\n    //istanbul ignore else\n    if (obj.hasOwnProperty(key)) {\n\n      //Convert key to snake case\n      const converted = converter(key);\n\n      //Recursive for child objects, unless ignored\n      //The ignored check checks both variants of the key\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        if (!ignored.includes(key) && !ignored.includes(converted)) {\n          obj[key] = convertKeys(obj[key], converter, ignored);\n        }\n      }\n\n      //Convert key to snake case and set if needed\n      if (converted !== key) {\n        obj[converted] = obj[key];\n        delete obj[key];\n      }\n    }\n  }\n\n  //Return object\n  return obj;\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8C;EAE7D;EACA,IAAI,OAAOF,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;IAC3C,MAAM,IAAIG,KAAJ,CAAU,uCAAuCH,GAAjD,CAAN;EACD,CAL4D,CAO7D;;;EACA,IAAII,KAAK,CAACC,OAAN,CAAcL,GAAd,CAAJ,EAAwB;IACtB,OAAOA,GAAP;EACD,CAV4D,CAY7D;;;EACA,IAAI,CAACI,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAL,EAA6B;IAC3BA,OAAO,GAAG,EAAV;EACD,CAf4D,CAiB7D;;;EACA,KAAK,MAAMI,GAAX,IAAkBN,GAAlB,EAAuB;IACrB;IACA,IAAIA,GAAG,CAACO,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B;MAE3B;MACA,MAAME,SAAS,GAAGP,SAAS,CAACK,GAAD,CAA3B,CAH2B,CAK3B;MACA;;MACA,IAAI,OAAON,GAAG,CAACM,GAAD,CAAV,KAAoB,QAApB,IAAgCN,GAAG,CAACM,GAAD,CAAH,KAAa,IAAjD,EAAuD;QACrD,IAAI,CAACJ,OAAO,CAACO,QAAR,CAAiBH,GAAjB,CAAD,IAA0B,CAACJ,OAAO,CAACO,QAAR,CAAiBD,SAAjB,CAA/B,EAA4D;UAC1DR,GAAG,CAACM,GAAD,CAAH,GAAWP,WAAW,CAACC,GAAG,CAACM,GAAD,CAAJ,EAAWL,SAAX,EAAsBC,OAAtB,CAAtB;QACD;MACF,CAX0B,CAa3B;;;MACA,IAAIM,SAAS,KAAKF,GAAlB,EAAuB;QACrBN,GAAG,CAACQ,SAAD,CAAH,GAAiBR,GAAG,CAACM,GAAD,CAApB;QACA,OAAON,GAAG,CAACM,GAAD,CAAV;MACD;IACF;EACF,CAvC4D,CAyC7D;;;EACA,OAAON,GAAP;AACD,CA3CD"},"metadata":{},"sourceType":"script"}