{"ast":null,"code":"'use strict';\n/**\n * Wrap substitutions\n */\n\nmodule.exports = function wrap(substitutions, left = '{{', right = '}}') {\n  //Process arrays\n  if (Array.isArray(substitutions)) {\n    return substitutions.map(subs => wrap(subs, left, right));\n  } //Initialize new wrapped object\n\n\n  const wrapped = {}; //Map substitutions and ensure string for value\n\n  for (const key in substitutions) {\n    //istanbul ignore else\n    if (substitutions.hasOwnProperty(key)) {\n      wrapped[left + key + right] = String(substitutions[key]);\n    }\n  } //Return wrapped substitutions\n\n\n  return wrapped;\n};","map":{"version":3,"names":["module","exports","wrap","substitutions","left","right","Array","isArray","map","subs","wrapped","key","hasOwnProperty","String"],"sources":["D:/grad project/examico project/Ecamico/node_modules/@sendgrid/helpers/helpers/wrap-substitutions.js"],"sourcesContent":["'use strict';\n\n/**\n * Wrap substitutions\n */\nmodule.exports = function wrap(substitutions, left = '{{', right = '}}') {\n\n  //Process arrays\n  if (Array.isArray(substitutions)) {\n    return substitutions.map(subs => wrap(subs, left, right));\n  }\n\n  //Initialize new wrapped object\n  const wrapped = {};\n\n  //Map substitutions and ensure string for value\n  for (const key in substitutions) {\n    //istanbul ignore else\n    if (substitutions.hasOwnProperty(key)) {\n      wrapped[left + key + right] = String(substitutions[key]);\n    }\n  }\n\n  //Return wrapped substitutions\n  return wrapped;\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,aAAd,EAA6BC,IAAI,GAAG,IAApC,EAA0CC,KAAK,GAAG,IAAlD,EAAwD;EAEvE;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcJ,aAAd,CAAJ,EAAkC;IAChC,OAAOA,aAAa,CAACK,GAAd,CAAkBC,IAAI,IAAIP,IAAI,CAACO,IAAD,EAAOL,IAAP,EAAaC,KAAb,CAA9B,CAAP;EACD,CALsE,CAOvE;;;EACA,MAAMK,OAAO,GAAG,EAAhB,CARuE,CAUvE;;EACA,KAAK,MAAMC,GAAX,IAAkBR,aAAlB,EAAiC;IAC/B;IACA,IAAIA,aAAa,CAACS,cAAd,CAA6BD,GAA7B,CAAJ,EAAuC;MACrCD,OAAO,CAACN,IAAI,GAAGO,GAAP,GAAaN,KAAd,CAAP,GAA8BQ,MAAM,CAACV,aAAa,CAACQ,GAAD,CAAd,CAApC;IACD;EACF,CAhBsE,CAkBvE;;;EACA,OAAOD,OAAP;AACD,CApBD"},"metadata":{},"sourceType":"script"}