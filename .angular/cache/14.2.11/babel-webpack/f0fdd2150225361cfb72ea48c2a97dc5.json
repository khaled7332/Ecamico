{"ast":null,"code":"import { catchError, forkJoin, of, switchMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../student.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction ScoreComponent_div_10_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"p\");\n    i0.ɵɵtext(3, \"point: 10\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction ScoreComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"h3\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 12)(4, \"div\", 13)(5, \"div\", 14)(6, \"textarea\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function ScoreComponent_div_10_Template_textarea_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const ques_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.answerDetail[ques_r1.NumberOfquestion - 1].answer = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(7, ScoreComponent_div_10_div_7_Template, 4, 0, \"div\", 16);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ques_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Q\", ques_r1.NumberOfquestion, \": \", ques_r1.question, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.answerDetail[ques_r1.NumberOfquestion - 1].answer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", false);\n  }\n}\n\nexport class ScoreComponent {\n  constructor(_StudentService) {\n    this._StudentService = _StudentService;\n    this.exam = null;\n    this.timer = null;\n    this.body = null;\n    this.totalPoint = 0;\n    this.answerDetail = [];\n  }\n\n  ngOnInit() {\n    this.exam = this._StudentService.examInfo;\n    this.dd();\n    this.timer = this.exam.duration * 60; // Update the timer every second\n\n    setInterval(() => {\n      this.timer--;\n    }, 1000);\n  }\n\n  formatTime(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  }\n\n  dd() {\n    this.answerDetail = this.exam.question.map(element => ({\n      NumberOfquestion: element.NumberOfquestion,\n      answer: \"\",\n      point: element.point\n    }));\n  } // async send(){\n  //   for (let index = 0; index < this.answerDetail.length; index++) {\n  //     const question = this.exam.question.find((q: { NumberOfquestion: number; }) => q.NumberOfquestion === index + 1);\n  //     this.body = {\n  //       data:[\n  //         question ? question.correctAnswer : '' ,    \n  //         this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1)?.answer || ''\n  //       ]\n  //     };\n  //   this._StudentService.ai(this.body).pipe(\n  //     catchError(error => {\n  //       console.log(error);\n  //       return of(null); // Return an observable with a new value or re-throw the error\n  //     })\n  //     ).subscribe(response => {\n  //       console.log(this.answerDetail)\n  //       if (response.data[0].label=='correct') {\n  //         // this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point = ;  \n  //       }else if(response.data[0].label=='Incorrect'){\n  //         this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point = 0\n  //       }else{\n  //         this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point *= .5\n  //       }\n  //       console.log(this.answerDetail,response.data[0].label);\n  //     })\n  //   }\n  // send() {\n  //   // step1\n  //   for (let index = 0; index < this.answerDetail.length; index++) {\n  //     const question = this.exam.question.find((q: { NumberOfquestion: number; }) => q.NumberOfquestion === index + 1);\n  //     const body = {\n  //       data: [\n  //         question ? question.correctAnswer : '',\n  //         this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1)?.answer || ''\n  //       ]\n  //     };\n  //     this._StudentService.ai(body).pipe(\n  //       catchError(error => {\n  //         console.log(error);\n  //         return of(null); // Return an observable with a new value or re-throw the error\n  //       })\n  //     ).subscribe(response => {\n  //       console.log(this.answerDetail);\n  //       if (response && response.data && response.data.length > 0) {\n  //         const label = response.data[0].label;\n  //         if (label === 'correct') {\n  //           // Set point to full score\n  //           this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point *= 1;\n  //           this.totalPoint +=this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point\n  //         } else if (label === 'incorrect') {\n  //           // Set point to zero\n  //           this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point *= 0;\n  //           this.totalPoint +=this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point\n  //         } else {\n  //           // Set point to half of the original value\n  //           const originalPoint = this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point;\n  //           this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point = originalPoint * 0.5;\n  //           this.totalPoint +=this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point\n  //         }\n  //       }\n  //       console.log(this.answerDetail, response?.data[0]?.label);\n  //     });\n  //   }\n  //   // step2\n  //   this._StudentService.submitAnswer(this.exam._id,{\"totalPoint\":this.totalPoint,\"answerDetail\":this.answerDetail}).pipe(\n  //     catchError(error => {\n  //       console.log(error);\n  //       return of(null); // Return an observable with a new value or re-throw the error\n  //     })\n  //     ).subscribe( response => {\n  //       console.log(response);\n  //     })\n  // }\n\n\n  send() {\n    const observables = [];\n\n    for (let index = 0; index < this.answerDetail.length; index++) {\n      const question = this.exam.question.find(q => q.NumberOfquestion === index + 1);\n      const body = {\n        data: [question ? question.correctAnswer : '', this.answerDetail.find(a => a.NumberOfquestion === index + 1)?.answer || '']\n      };\n\n      const observable = this._StudentService.ai(body).pipe(catchError(error => {\n        console.log(error);\n        return of(null); // Return an observable with a new value or re-throw the error\n      }));\n\n      observables.push(observable);\n    }\n\n    forkJoin(observables).pipe(tap(responses => {\n      responses.forEach((response, index) => {\n        if (response && response.data && response.data.length > 0) {\n          const label = response.data[0].label;\n\n          if (label === 'correct') {\n            // Set point to full score\n            this.answerDetail.find(a => a.NumberOfquestion === index + 1).point *= 1;\n            this.totalPoint += this.answerDetail.find(a => a.NumberOfquestion === index + 1).point;\n          } else if (label === 'incorrect') {\n            // Set point to zero\n            this.answerDetail.find(a => a.NumberOfquestion === index + 1).point *= 0;\n            this.totalPoint += this.answerDetail.find(a => a.NumberOfquestion === index + 1).point;\n          } else {\n            // Set point to half of the original value\n            const originalPoint = this.answerDetail.find(a => a.NumberOfquestion === index + 1).point;\n            this.answerDetail.find(a => a.NumberOfquestion === index + 1).point = originalPoint * 0.5;\n            this.totalPoint += this.answerDetail.find(a => a.NumberOfquestion === index + 1).point;\n          }\n        }\n      });\n    }), switchMap(() => {\n      return this._StudentService.submitAnswer(this.exam._id, {\n        \"totalPoint\": this.totalPoint,\n        \"answerDetail\": this.answerDetail\n      }).pipe(catchError(error => {\n        console.log(error);\n        return of(null); // Return an observable with a new value or re-throw the error\n      }));\n    })).subscribe(response => {\n      console.log(response);\n    });\n  }\n\n}\n\nScoreComponent.ɵfac = function ScoreComponent_Factory(t) {\n  return new (t || ScoreComponent)(i0.ɵɵdirectiveInject(i1.StudentService));\n};\n\nScoreComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScoreComponent,\n  selectors: [[\"app-score\"]],\n  decls: 14,\n  vars: 4,\n  consts: [[1, \"container\", \"py-5\"], [1, \"row\", \"my-5\"], [1, \"col-3\", \"ms-auto\"], [1, \"text-end\", \"h-color\"], [1, \"row\", \"mb-5\"], [1, \"font-head\", \"text-center\", \"m-color\", \"mb-2\"], [1, \"text-center\"], [\"class\", \"ques mb-4\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"m-btn\", \"my-4\", \"float-end\", 3, \"click\"], [1, \"clearfix\"], [1, \"ques\", \"mb-4\"], [1, \"h-color\", \"mb-2\"], [1, \"row\"], [1, \"col-md-9\"], [1, \"\"], [\"rows\", \"4\", \"placeholder\", \"write your answer.......\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"col-md-3 \", 4, \"ngIf\"], [1, \"col-md-3\"], [1, \"bg-success\", \"w-25\", \"border\", \"rounded-2\", \"text-center\"]],\n  template: function ScoreComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"p\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"h2\", 5);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\", 6);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, ScoreComponent_div_10_Template, 8, 4, \"div\", 7);\n      i0.ɵɵelementStart(11, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function ScoreComponent_Template_button_click_11_listener() {\n        return ctx.send();\n      });\n      i0.ɵɵtext(12, \"send answer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"div\", 9);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"time left: \", ctx.formatTime(ctx.timer), \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.exam.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.exam.description);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.exam.question);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzY29yZS5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["catchError","forkJoin","of","switchMap","tap","i0","answer","$event","ScoreComponent","constructor","_StudentService","ngOnInit","exam","examInfo","dd","timer","duration","setInterval","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","answerDetail","question","map","element","NumberOfquestion","point","send","observables","index","length","find","q","body","data","correctAnswer","a","observable","ai","pipe","error","console","log","push","responses","forEach","response","label","totalPoint","originalPoint","submitAnswer","_id","subscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\grad project\\examico project\\Ecamico\\src\\app\\score\\score.component.ts","D:\\grad project\\examico project\\Ecamico\\src\\app\\score\\score.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../student.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {catchError, forkJoin, of, switchMap, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-score',\n  templateUrl: './score.component.html',\n  styleUrls: ['./score.component.scss']\n})\nexport class ScoreComponent implements OnInit {\n\n  constructor(private _StudentService:StudentService) { }\n\n  exam :any =null\n  timer :any =null\n  body :any =null\n  totalPoint:number=0\n  answerDetail:any=[]\n\n  ngOnInit(): void {\n    this.exam = this._StudentService.examInfo\n    this.dd()\n    this.timer = this.exam.duration*60;\n    // Update the timer every second\n    setInterval(() => {\n      this.timer--;\n    }, 1000);\n  }\n  formatTime(seconds: number): string {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n    \n  }\n  dd(){\n    this.answerDetail = this.exam.question.map((element: { NumberOfquestion: any; point: any; }) => ({\n      NumberOfquestion: element.NumberOfquestion,\n      answer: \"\",\n      point: element.point\n    }));\n    \n    \n  }\n  // async send(){\n  //   for (let index = 0; index < this.answerDetail.length; index++) {\n  //     const question = this.exam.question.find((q: { NumberOfquestion: number; }) => q.NumberOfquestion === index + 1);\n  //     this.body = {\n  //       data:[\n  //         question ? question.correctAnswer : '' ,    \n  //         this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1)?.answer || ''\n  //       ]\n  //     };\n  //   this._StudentService.ai(this.body).pipe(\n  //     catchError(error => {\n  //       console.log(error);\n  //       return of(null); // Return an observable with a new value or re-throw the error\n  //     })\n  //     ).subscribe(response => {\n  //       console.log(this.answerDetail)\n  //       if (response.data[0].label=='correct') {\n  //         // this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point = ;  \n  //       }else if(response.data[0].label=='Incorrect'){\n  //         this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point = 0\n  //       }else{\n  //         this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point *= .5\n  //       }\n  //       console.log(this.answerDetail,response.data[0].label);\n          \n  //     })\n  //   }\n\n\n  // send() {\n  //   // step1\n  //   for (let index = 0; index < this.answerDetail.length; index++) {\n  //     const question = this.exam.question.find((q: { NumberOfquestion: number; }) => q.NumberOfquestion === index + 1);\n  //     const body = {\n  //       data: [\n  //         question ? question.correctAnswer : '',\n  //         this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1)?.answer || ''\n  //       ]\n  //     };\n  //     this._StudentService.ai(body).pipe(\n  //       catchError(error => {\n  //         console.log(error);\n  //         return of(null); // Return an observable with a new value or re-throw the error\n  //       })\n  //     ).subscribe(response => {\n  //       console.log(this.answerDetail);\n  //       if (response && response.data && response.data.length > 0) {\n  //         const label = response.data[0].label;\n  //         if (label === 'correct') {\n  //           // Set point to full score\n  //           this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point *= 1;\n  //           this.totalPoint +=this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point\n  //         } else if (label === 'incorrect') {\n  //           // Set point to zero\n  //           this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point *= 0;\n  //           this.totalPoint +=this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point\n  //         } else {\n  //           // Set point to half of the original value\n  //           const originalPoint = this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point;\n  //           this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point = originalPoint * 0.5;\n  //           this.totalPoint +=this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point\n  //         }\n  //       }\n  //       console.log(this.answerDetail, response?.data[0]?.label);\n  //     });\n  //   }\n  //   // step2\n  //   this._StudentService.submitAnswer(this.exam._id,{\"totalPoint\":this.totalPoint,\"answerDetail\":this.answerDetail}).pipe(\n  //     catchError(error => {\n  //       console.log(error);\n  //       return of(null); // Return an observable with a new value or re-throw the error\n  //     })\n  //     ).subscribe( response => {\n  //       console.log(response);\n        \n  //     })\n    \n  // }\n  send() {\n    const observables = [];\n  \n    for (let index = 0; index < this.answerDetail.length; index++) {\n      const question = this.exam.question.find((q: { NumberOfquestion: number; }) => q.NumberOfquestion === index + 1);\n      const body = {\n        data: [\n          question ? question.correctAnswer : '',\n          this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1)?.answer || ''\n        ]\n      };\n      const observable = this._StudentService.ai(body).pipe(\n        catchError(error => {\n          console.log(error);\n          return of(null); // Return an observable with a new value or re-throw the error\n        })\n      );\n      observables.push(observable);\n    }\n  \n    forkJoin(observables).pipe(\n      tap(responses => {\n        responses.forEach((response, index) => {\n          if (response && response.data && response.data.length > 0) {\n            const label = response.data[0].label;\n            if (label === 'correct') {\n              // Set point to full score\n              this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point *= 1;\n              this.totalPoint += this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point;\n            } else if (label === 'incorrect') {\n              // Set point to zero\n              this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point *= 0;\n              this.totalPoint += this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point;\n            } else {\n              // Set point to half of the original value\n              const originalPoint = this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point;\n              this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point = originalPoint * 0.5;\n              this.totalPoint += this.answerDetail.find((a: { NumberOfquestion: number; }) => a.NumberOfquestion === index + 1).point;\n            }\n          }\n        });\n      }),\n      switchMap(() => {\n        return this._StudentService.submitAnswer(this.exam._id, { \"totalPoint\": this.totalPoint, \"answerDetail\": this.answerDetail }).pipe(\n          catchError(error => {\n            console.log(error);\n            return of(null); // Return an observable with a new value or re-throw the error\n          })\n        );\n      })\n    ).subscribe(response => {\n      console.log(response);\n    });\n  }\n  }\n\n  // for (let index = 0; index < this.answerDetail.length; index++) {\n  //   data.push([modelAnswer, studentAnswer]);\n  // }\n\n\n\n  // data\n  // : \n  // Array(2)\n  // 0\n  // : \n  // (2) [\"asdfghjkl;'\", undefined]\n  // 1\n  // : \n  // (2) ['asdasdf', undefined]\n\n\n\n//    \"exam\": {\n//     \"_id\": \"64590755b37d9bf49727b50c\",\n//     \"createdBY\": \"645906f3b37d9bf49727b508\",\n//     \"title\": \"en\",\n//     \"description\": \"assssssss\",\n//     \"duration\": 50,\n//     \"question\": [\n//         {\n//             \"NumberOfquestion\": 1,\n//             \"question\": \"asdfghtresdcvbf\",\n//             \"point\": 2,\n//             \"correctAnswer\": \"asdfghjkl;'\"\n//         },\n//         {\n//             \"NumberOfquestion\": 2,\n//             \"question\": \"asdfghtresdcvbf\",\n//             \"point\": 2,\n//             \"correctAnswer\": \"asdfghjkl;'\"\n//         }\n//     ],\n//     \"createdAt\": \"2023-05-08T14:29:41.241Z\",\n//     \"updatedAt\": \"2023-05-08T14:29:41.241Z\",\n//     \"__v\": 0\n// } \n//   {\n//     \"totalPoint\":30,\n//     \"answerDetail\":[\n//         {\n//         \"NumberOfquestion\":1,\n//         \"answer\":\"qwertykgfdssdf\",\n//         \"point\":22\n//         },\n//         {\n//         \"NumberOfquestion\":2,\n//         \"answer\":\"qwertykgfdssdf\",\n//         \"point\":4\n//         }\n//     ]\n// }\n// }\n\n","<!-- \"exam\": {\n    \"_id\": \"64590755b37d9bf49727b50c\",\n    \"createdBY\": \"645906f3b37d9bf49727b508\",\n    \"title\": \"en\",\n    \"description\": \"assssssss\",\n    \"duration\": 50,\n    \"question\": [\n        {\n            \"NumberOfquestion\": 1,\n            \"question\": \"asdfghtresdcvbf\",\n            \"point\": 2,\n            \"correctAnswer\": \"asdfghjkl;'\"\n        },\n        {\n            \"NumberOfquestion\": 2,\n            \"question\": \"asdfghtresdcvbf\",\n            \"point\": 2,\n            \"correctAnswer\": \"asdfghjkl;'\"\n        }\n    ],\n    \"createdAt\": \"2023-05-08T14:29:41.241Z\",\n    \"updatedAt\": \"2023-05-08T14:29:41.241Z\",\n    \"__v\": 0\n} -->\n\n\n<div class=\"container py-5\">\n    <div class=\"row my-5\">\n        <div class=\"col-3 ms-auto\">\n            <p class=\"text-end h-color\">time left: {{formatTime(timer)}}</p>\n        </div>\n    </div>\n    <div class=\"row mb-5\">\n        <h2 class=\"font-head text-center m-color mb-2\">{{exam.title}}</h2>\n        <p class=\"text-center\">{{exam.description}}</p>\n    </div>\n    <div class=\"ques mb-4\" *ngFor=\"let ques of exam.question\">\n        <h3 class=\"h-color mb-2\">Q{{ques.NumberOfquestion}}: {{ques.question}}</h3>\n        <div class=\"row\">\n            <div class=\"col-md-9\">\n                <div class=\"\">\n                    <textarea class=\"form-control\" rows=\"4\"  placeholder=\"write your answer.......\" [(ngModel)]=\"answerDetail[ques.NumberOfquestion-1].answer\"></textarea>\n                </div>\n            </div>\n            <div class=\"col-md-3 \" *ngIf=\"false\" >\n                <div class=\"bg-success w-25 border rounded-2 text-center\">\n                    <p>point: 10</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-btn my-4 float-end\"(click)=\"send()\" >send answer</button>\n    <div class=\"clearfix\"></div>\n</div>"]},"metadata":{},"sourceType":"module"}