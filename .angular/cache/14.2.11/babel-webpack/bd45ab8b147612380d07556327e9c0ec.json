{"ast":null,"code":"'use strict';\n/**\n * Dependencies\n */\n\nconst EmailAddress = require('./email-address');\n\nconst toCamelCase = require('../helpers/to-camel-case');\n\nconst toSnakeCase = require('../helpers/to-snake-case');\n\nconst deepClone = require('../helpers/deep-clone');\n\nconst deepMerge = require('deepmerge');\n\nconst wrapSubstitutions = require('../helpers/wrap-substitutions');\n/**\n * Personalization class\n */\n\n\nclass Personalization {\n  /**\n   * Constructor\n   */\n  constructor(data) {\n    //Init array and object placeholders\n    this.to = [];\n    this.cc = [];\n    this.bcc = [];\n    this.headers = {};\n    this.customArgs = {};\n    this.substitutions = {};\n    this.substitutionWrappers = ['{{', '}}'];\n    this.dynamicTemplateData = {}; //Build from data if given\n\n    if (data) {\n      this.fromData(data);\n    }\n  }\n  /**\n   * From data\n   */\n\n\n  fromData(data) {\n    //Expecting object\n    if (typeof data !== 'object') {\n      throw new Error('Expecting object for Mail data');\n    } //Convert to camel case to make it workable, making a copy to prevent\n    //changes to the original objects\n\n\n    data = deepClone(data);\n    data = toCamelCase(data, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']); //Extract properties from data\n\n    const {\n      to,\n      from,\n      cc,\n      bcc,\n      subject,\n      headers,\n      customArgs,\n      sendAt,\n      substitutions,\n      substitutionWrappers,\n      dynamicTemplateData\n    } = data; //Set data\n\n    this.setTo(to);\n    this.setFrom(from);\n    this.setCc(cc);\n    this.setBcc(bcc);\n    this.setSubject(subject);\n    this.setHeaders(headers);\n    this.setSubstitutions(substitutions);\n    this.setSubstitutionWrappers(substitutionWrappers);\n    this.setCustomArgs(customArgs);\n    this.setDynamicTemplateData(dynamicTemplateData);\n    this.setSendAt(sendAt);\n  }\n  /**\n   * Set subject\n   */\n\n\n  setSubject(subject) {\n    if (typeof subject === 'undefined') {\n      return;\n    }\n\n    if (typeof subject !== 'string') {\n      throw new Error('String expected for `subject`');\n    }\n\n    this.subject = subject;\n  }\n  /**\n   * Set send at\n   */\n\n\n  setSendAt(sendAt) {\n    if (typeof sendAt === 'undefined') {\n      return;\n    }\n\n    if (!Number.isInteger(sendAt)) {\n      throw new Error('Integer expected for `sendAt`');\n    }\n\n    this.sendAt = sendAt;\n  }\n  /**\n   * Set to\n   */\n\n\n  setTo(to) {\n    if (typeof to === 'undefined') {\n      return;\n    }\n\n    if (!Array.isArray(to)) {\n      to = [to];\n    }\n\n    this.to = EmailAddress.create(to);\n  }\n  /**\n   * Set from\n   * */\n\n\n  setFrom(from) {\n    if (typeof from === 'undefined') {\n      return;\n    }\n\n    this.from = EmailAddress.create(from);\n  }\n  /**\n   * Add a single to\n   */\n\n\n  addTo(to) {\n    if (typeof to === 'undefined') {\n      return;\n    }\n\n    this.to.push(EmailAddress.create(to));\n  }\n  /**\n   * Set cc\n   */\n\n\n  setCc(cc) {\n    if (typeof cc === 'undefined') {\n      return;\n    }\n\n    if (!Array.isArray(cc)) {\n      cc = [cc];\n    }\n\n    this.cc = EmailAddress.create(cc);\n  }\n  /**\n   * Add a single cc\n   */\n\n\n  addCc(cc) {\n    if (typeof cc === 'undefined') {\n      return;\n    }\n\n    this.cc.push(EmailAddress.create(cc));\n  }\n  /**\n   * Set bcc\n   */\n\n\n  setBcc(bcc) {\n    if (typeof bcc === 'undefined') {\n      return;\n    }\n\n    if (!Array.isArray(bcc)) {\n      bcc = [bcc];\n    }\n\n    this.bcc = EmailAddress.create(bcc);\n  }\n  /**\n   * Add a single bcc\n   */\n\n\n  addBcc(bcc) {\n    if (typeof bcc === 'undefined') {\n      return;\n    }\n\n    this.bcc.push(EmailAddress.create(bcc));\n  }\n  /**\n   * Set headers\n   */\n\n\n  setHeaders(headers) {\n    if (typeof headers === 'undefined') {\n      return;\n    }\n\n    if (typeof headers !== 'object' || headers === null) {\n      throw new Error('Object expected for `headers`');\n    }\n\n    this.headers = headers;\n  }\n  /**\n   * Add a header\n   */\n\n\n  addHeader(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for header key');\n    }\n\n    if (typeof value !== 'string') {\n      throw new Error('String expected for header value');\n    }\n\n    this.headers[key] = value;\n  }\n  /**\n   * Set custom args\n   */\n\n\n  setCustomArgs(customArgs) {\n    if (typeof customArgs === 'undefined') {\n      return;\n    }\n\n    if (typeof customArgs !== 'object' || customArgs === null) {\n      throw new Error('Object expected for `customArgs`');\n    }\n\n    this.customArgs = customArgs;\n  }\n  /**\n   * Add a custom arg\n   */\n\n\n  addCustomArg(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for custom arg key');\n    }\n\n    if (typeof value !== 'string') {\n      throw new Error('String expected for custom arg value');\n    }\n\n    this.customArgs[key] = value;\n  }\n  /**\n   * Set substitutions\n   */\n\n\n  setSubstitutions(substitutions) {\n    if (typeof substitutions === 'undefined') {\n      return;\n    }\n\n    if (typeof substitutions !== 'object') {\n      throw new Error('Object expected for `substitutions`');\n    }\n\n    this.substitutions = substitutions;\n  }\n  /**\n   * Add a substitution\n   */\n\n\n  addSubstitution(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for substitution key');\n    }\n\n    if (typeof value !== 'string' && typeof value !== 'number') {\n      throw new Error('String or Number expected for substitution value');\n    }\n\n    this.substitutions[key] = value;\n  }\n  /**\n   * Reverse merge substitutions, preserving existing ones\n   */\n\n\n  reverseMergeSubstitutions(substitutions) {\n    if (typeof substitutions === 'undefined' || substitutions === null) {\n      return;\n    }\n\n    if (typeof substitutions !== 'object') {\n      throw new Error('Object expected for `substitutions` in reverseMergeSubstitutions');\n    }\n\n    this.substitutions = Object.assign({}, substitutions, this.substitutions);\n  }\n  /**\n   * Set substitution wrappers\n   */\n\n\n  setSubstitutionWrappers(wrappers) {\n    if (typeof wrappers === 'undefined' || wrappers === null) {\n      return;\n    }\n\n    if (!Array.isArray(wrappers) || wrappers.length !== 2) {\n      throw new Error('Array expected with two elements for `substitutionWrappers`');\n    }\n\n    this.substitutionWrappers = wrappers;\n  }\n  /**\n   * Reverse merge dynamic template data, preserving existing ones\n   */\n\n\n  deepMergeDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined' || dynamicTemplateData === null) {\n      return;\n    }\n\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error('Object expected for `dynamicTemplateData` in deepMergeDynamicTemplateData');\n    }\n\n    this.dynamicTemplateData = deepMerge(dynamicTemplateData, this.dynamicTemplateData);\n  }\n  /**\n   * Set dynamic template data\n   */\n\n\n  setDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined') {\n      return;\n    }\n\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error('Object expected for `dynamicTemplateData`');\n    }\n\n    this.dynamicTemplateData = dynamicTemplateData;\n  }\n  /**\n   * To JSON\n   */\n\n\n  toJSON() {\n    //Get data from self\n    const {\n      to,\n      from,\n      cc,\n      bcc,\n      subject,\n      headers,\n      customArgs,\n      sendAt,\n      substitutions,\n      substitutionWrappers,\n      dynamicTemplateData\n    } = this; //Initialize with mandatory values\n\n    const json = {\n      to\n    }; //Arrays\n\n    if (Array.isArray(cc) && cc.length > 0) {\n      json.cc = cc;\n    }\n\n    if (Array.isArray(bcc) && bcc.length > 0) {\n      json.bcc = bcc;\n    } //Objects\n\n\n    if (Object.keys(headers).length > 0) {\n      json.headers = headers;\n    }\n\n    if (substitutions && Object.keys(substitutions).length > 0) {\n      const [left, right] = substitutionWrappers;\n      json.substitutions = wrapSubstitutions(substitutions, left, right);\n    }\n\n    if (Object.keys(customArgs).length > 0) {\n      json.customArgs = customArgs;\n    }\n\n    if (dynamicTemplateData && Object.keys(dynamicTemplateData).length > 0) {\n      json.dynamicTemplateData = dynamicTemplateData;\n    } //Simple properties\n\n\n    if (typeof subject !== 'undefined') {\n      json.subject = subject;\n    }\n\n    if (typeof sendAt !== 'undefined') {\n      json.sendAt = sendAt;\n    }\n\n    if (typeof from !== 'undefined') {\n      json.from = from;\n    } //Return as snake cased object\n\n\n    return toSnakeCase(json, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']);\n  }\n\n} //Export class\n\n\nmodule.exports = Personalization;","map":{"version":3,"names":["EmailAddress","require","toCamelCase","toSnakeCase","deepClone","deepMerge","wrapSubstitutions","Personalization","constructor","data","to","cc","bcc","headers","customArgs","substitutions","substitutionWrappers","dynamicTemplateData","fromData","Error","from","subject","sendAt","setTo","setFrom","setCc","setBcc","setSubject","setHeaders","setSubstitutions","setSubstitutionWrappers","setCustomArgs","setDynamicTemplateData","setSendAt","Number","isInteger","Array","isArray","create","addTo","push","addCc","addBcc","addHeader","key","value","addCustomArg","addSubstitution","reverseMergeSubstitutions","Object","assign","wrappers","length","deepMergeDynamicTemplateData","toJSON","json","keys","left","right","module","exports"],"sources":["D:/grad project/examico project/Ecamico/node_modules/@sendgrid/helpers/classes/personalization.js"],"sourcesContent":["'use strict';\n\n/**\n * Dependencies\n */\nconst EmailAddress = require('./email-address');\nconst toCamelCase = require('../helpers/to-camel-case');\nconst toSnakeCase = require('../helpers/to-snake-case');\nconst deepClone = require('../helpers/deep-clone');\nconst deepMerge = require('deepmerge');\nconst wrapSubstitutions = require('../helpers/wrap-substitutions');\n\n/**\n * Personalization class\n */\nclass Personalization {\n\n  /**\n   * Constructor\n   */\n  constructor(data) {\n\n    //Init array and object placeholders\n    this.to = [];\n    this.cc = [];\n    this.bcc = [];\n    this.headers = {};\n    this.customArgs = {};\n    this.substitutions = {};\n    this.substitutionWrappers = ['{{', '}}'];\n    this.dynamicTemplateData = {};\n\n    //Build from data if given\n    if (data) {\n      this.fromData(data);\n    }\n  }\n\n  /**\n   * From data\n   */\n  fromData(data) {\n\n    //Expecting object\n    if (typeof data !== 'object') {\n      throw new Error('Expecting object for Mail data');\n    }\n\n    //Convert to camel case to make it workable, making a copy to prevent\n    //changes to the original objects\n    data = deepClone(data);\n    data = toCamelCase(data, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']);\n\n    //Extract properties from data\n    const {\n      to, from, cc, bcc, subject, headers, customArgs, sendAt,\n      substitutions, substitutionWrappers, dynamicTemplateData,\n    } = data;\n\n    //Set data\n    this.setTo(to);\n    this.setFrom(from);\n    this.setCc(cc);\n    this.setBcc(bcc);\n    this.setSubject(subject);\n    this.setHeaders(headers);\n    this.setSubstitutions(substitutions);\n    this.setSubstitutionWrappers(substitutionWrappers);\n    this.setCustomArgs(customArgs);\n    this.setDynamicTemplateData(dynamicTemplateData);\n    this.setSendAt(sendAt);\n  }\n\n  /**\n   * Set subject\n   */\n  setSubject(subject) {\n    if (typeof subject === 'undefined') {\n      return;\n    }\n    if (typeof subject !== 'string') {\n      throw new Error('String expected for `subject`');\n    }\n    this.subject = subject;\n  }\n\n  /**\n   * Set send at\n   */\n  setSendAt(sendAt) {\n    if (typeof sendAt === 'undefined') {\n      return;\n    }\n    if (!Number.isInteger(sendAt)) {\n      throw new Error('Integer expected for `sendAt`');\n    }\n    this.sendAt = sendAt;\n  }\n\n  /**\n   * Set to\n   */\n  setTo(to) {\n    if (typeof to === 'undefined') {\n      return;\n    }\n    if (!Array.isArray(to)) {\n      to = [to];\n    }\n    this.to = EmailAddress.create(to);\n  }\n\n  /**\n   * Set from\n   * */\n  setFrom(from) {\n    if (typeof from === 'undefined') {\n      return;\n    }\n    this.from = EmailAddress.create(from);\n  }\n\n  /**\n   * Add a single to\n   */\n  addTo(to) {\n    if (typeof to === 'undefined') {\n      return;\n    }\n    this.to.push(EmailAddress.create(to));\n  }\n\n  /**\n   * Set cc\n   */\n  setCc(cc) {\n    if (typeof cc === 'undefined') {\n      return;\n    }\n    if (!Array.isArray(cc)) {\n      cc = [cc];\n    }\n    this.cc = EmailAddress.create(cc);\n  }\n\n  /**\n   * Add a single cc\n   */\n  addCc(cc) {\n    if (typeof cc === 'undefined') {\n      return;\n    }\n    this.cc.push(EmailAddress.create(cc));\n  }\n\n  /**\n   * Set bcc\n   */\n  setBcc(bcc) {\n    if (typeof bcc === 'undefined') {\n      return;\n    }\n    if (!Array.isArray(bcc)) {\n      bcc = [bcc];\n    }\n    this.bcc = EmailAddress.create(bcc);\n  }\n\n  /**\n   * Add a single bcc\n   */\n  addBcc(bcc) {\n    if (typeof bcc === 'undefined') {\n      return;\n    }\n    this.bcc.push(EmailAddress.create(bcc));\n  }\n\n  /**\n   * Set headers\n   */\n  setHeaders(headers) {\n    if (typeof headers === 'undefined') {\n      return;\n    }\n    if (typeof headers !== 'object' || headers === null) {\n      throw new Error('Object expected for `headers`');\n    }\n    this.headers = headers;\n  }\n\n  /**\n   * Add a header\n   */\n  addHeader(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for header key');\n    }\n    if (typeof value !== 'string') {\n      throw new Error('String expected for header value');\n    }\n    this.headers[key] = value;\n  }\n\n  /**\n   * Set custom args\n   */\n  setCustomArgs(customArgs) {\n    if (typeof customArgs === 'undefined') {\n      return;\n    }\n    if (typeof customArgs !== 'object' || customArgs === null) {\n      throw new Error('Object expected for `customArgs`');\n    }\n    this.customArgs = customArgs;\n  }\n\n  /**\n   * Add a custom arg\n   */\n  addCustomArg(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for custom arg key');\n    }\n    if (typeof value !== 'string') {\n      throw new Error('String expected for custom arg value');\n    }\n    this.customArgs[key] = value;\n  }\n\n  /**\n   * Set substitutions\n   */\n  setSubstitutions(substitutions) {\n    if (typeof substitutions === 'undefined') {\n      return;\n    }\n    if (typeof substitutions !== 'object') {\n      throw new Error('Object expected for `substitutions`');\n    }\n    this.substitutions = substitutions;\n  }\n\n  /**\n   * Add a substitution\n   */\n  addSubstitution(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for substitution key');\n    }\n    if (typeof value !== 'string' && typeof value !== 'number') {\n      throw new Error('String or Number expected for substitution value');\n    }\n    this.substitutions[key] = value;\n  }\n\n  /**\n   * Reverse merge substitutions, preserving existing ones\n   */\n  reverseMergeSubstitutions(substitutions) {\n    if (typeof substitutions === 'undefined' || substitutions === null) {\n      return;\n    }\n    if (typeof substitutions !== 'object') {\n      throw new Error(\n        'Object expected for `substitutions` in reverseMergeSubstitutions'\n      );\n    }\n    this.substitutions = Object.assign({}, substitutions, this.substitutions);\n  }\n\n  /**\n   * Set substitution wrappers\n   */\n  setSubstitutionWrappers(wrappers) {\n    if (typeof wrappers === 'undefined' || wrappers === null) {\n      return;\n    }\n\n    if (!Array.isArray(wrappers) || wrappers.length !== 2) {\n      throw new Error(\n        'Array expected with two elements for `substitutionWrappers`'\n      );\n    }\n    this.substitutionWrappers = wrappers;\n  }\n\n  /**\n   * Reverse merge dynamic template data, preserving existing ones\n   */\n  deepMergeDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined' || dynamicTemplateData === null) {\n      return;\n    }\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error(\n        'Object expected for `dynamicTemplateData` in deepMergeDynamicTemplateData'\n      );\n    }\n    this.dynamicTemplateData = deepMerge(dynamicTemplateData, this.dynamicTemplateData);\n  }\n\n  /**\n   * Set dynamic template data\n   */\n  setDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined') {\n      return;\n    }\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error('Object expected for `dynamicTemplateData`');\n    }\n    this.dynamicTemplateData = dynamicTemplateData;\n  }\n\n  /**\n   * To JSON\n   */\n  toJSON() {\n\n    //Get data from self\n    const {\n      to, from, cc, bcc, subject, headers, customArgs, sendAt,\n      substitutions, substitutionWrappers, dynamicTemplateData,\n    } = this;\n\n    //Initialize with mandatory values\n    const json = {to};\n\n    //Arrays\n    if (Array.isArray(cc) && cc.length > 0) {\n      json.cc = cc;\n    }\n    if (Array.isArray(bcc) && bcc.length > 0) {\n      json.bcc = bcc;\n    }\n\n    //Objects\n    if (Object.keys(headers).length > 0) {\n      json.headers = headers;\n    }\n    if (substitutions && Object.keys(substitutions).length > 0) {\n      const [left, right] = substitutionWrappers;\n      json.substitutions = wrapSubstitutions(substitutions, left, right);\n    }\n    if (Object.keys(customArgs).length > 0) {\n      json.customArgs = customArgs;\n    }\n\n    if (dynamicTemplateData && Object.keys(dynamicTemplateData).length > 0) {\n      json.dynamicTemplateData = dynamicTemplateData;\n    }\n\n    //Simple properties\n    if (typeof subject !== 'undefined') {\n      json.subject = subject;\n    }\n    if (typeof sendAt !== 'undefined') {\n      json.sendAt = sendAt;\n    }\n    if (typeof from !== 'undefined') {\n      json.from = from;\n    }\n\n    //Return as snake cased object\n    return toSnakeCase(json, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']);\n  }\n}\n\n//Export class\nmodule.exports = Personalization;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}